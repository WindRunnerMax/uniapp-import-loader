"use strict";const transformName=e=>e.replace(/\B([A-Z])/g,"-$1").toLowerCase();module.exports=function({types:p}){return{visitor:{ImportDeclaration(o,e){const r=o["node"];if(!r)return;var{value:i}=r["source"];const{libraryName:n,libraryPath:a="lib"}=e.opts;if(!n||"string"!=typeof n||"string"!=typeof a)throw new Error("name should be provided [string]");const s={},c=[];i===n&&(r.specifiers.forEach(e=>{if(p.isImportSpecifier(e)){var{local:{name:e=void 0},imported:{name:r=void 0}}=e;if(!e||!r)throw o.buildCodeFrameError("An error occurred in parsing the abstract syntax tree");if(0!==o.scope.getBinding(e).references){const i=o.scope.generateUid("_"+e);s[e]=i;r=transformName(r);c.push(p.importDeclaration([p.importDefaultSpecifier(p.identifier(i))],p.StringLiteral(`${n}/${a}/${r}/`+r)));const t=o.scope.getBinding(e);t.referencePaths.forEach(e=>{var r=e["type"];"JSXIdentifier"===r?e.replaceWith(p.jSXIdentifier(i)):e.replaceWith(p.identifier(i))})}}}),o.replaceWithMultiple(c))}}}};
